On Front End:

Identifier <<static>>:
+FILE_LOCATION (location of model file)
+predict(image) (identify the image using ml)
+preProcessImage(image) (pre process the image to the networks needs)
+saveResults (temporarily save results locally if no wifi)
+updateModel(modelFile) (update the model with a new model file)


On Back End:

MLManager <<static>>:
+FILE_LOCATION (location of model file)
+scheduleTraining(dateTime) (schedule a retrain for a given date and time)
+reTrain() (instant call to retrain the network)
+gatherImages(gather needed images for retraining)
+predict(image) (identify the image if device doesn't support it directly on device)
+convertFormatJS(modelFile) (convert the model file from tensorflow to tensorflow.js)
+convertFormatLite(modelFile) (convert the model from tensorflow to tensorflow Lite)

On Back End with Python:

Train <<static>>:
+FILE_LOCATION (location of model file)
+trainModel([training images], [labels]) (retrain the model with the given images and labels)
+saveModel() (save the model as a file)